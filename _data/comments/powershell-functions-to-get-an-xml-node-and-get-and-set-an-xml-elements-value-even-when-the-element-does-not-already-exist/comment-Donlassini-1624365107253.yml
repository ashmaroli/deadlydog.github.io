_id: cf35c2e0-d355-11eb-94df-2b7756db0ca4
message: "This is great :-)\r\nI added the code below to allow fast creation of an XML node including the path up to the root if need be.\r\nI use the verb \"Register-\" for functions that retrieve an object, and if it doesn't exist, the function will create it and return it.\r\nSo if the note exists, you will get it - and if it doesn't exist, it will be created, and then you'll get it.\r\n\r\n\r\nFunction Get-Parent {\r\n\tParam (\r\n\t\t[string]$Path,\r\n\t\t[string]$SeparatorCharacter\r\n\t)\r\n\t[string[]]$Elements = $Path.Split($SeparatorCharacter)\r\n\tSwitch ($Elements.Count) {\r\n\t\t0 { \"\" }\r\n\t\t1 { \"\" }\r\n\t\tDefault {\r\n\t\t\t($Elements | Select-Object -First ($Elements.Count - 1)) -Join $SeparatorCharacter\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction Register-XmlNode([xml]$XmlDocument, [string]$NodePath, [string]$NamespaceURI = \"\", [string]$NodeSeparatorCharacter = '.') {\r\n\tIf ($NodePath -eq \"\") {\r\n\t\tThrow \"Path is invalid.\"\r\n\t}\r\n\t$XmlNode = Get-XmlNode @PSBoundParameters\r\n\tIf ($XmlNode) {\r\n\t\t$XmlNode\r\n\t}\r\n\tElse {\r\n\t\t$Parent = Register-XmlNode -NodePath (Get-Parent -Path $NodePath -SeparatorCharacter $NodeSeparatorCharacter) -XmlDocument $XmlDocument -NamespaceURI $NamespaceURI -NodeSeparatorCharacter $NodeSeparatorCharacter\r\n\t\tIf ($Parent) {\r\n\t\t\t$ChildNode = $XmlDocument.CreateNode('element', ($NodePath.Split($NodeSeparatorCharacter) | Select-Object -Last 1), '')\r\n\t\t\t$Parent.AppendChild($ChildNode)\r\n\t\t}\r\n\t}\r\n}"
name: Donlassini
email: 32eaaf33e68e945460233ccfc4f39688
url: ''
hidden: ''
date: '2021-06-22T12:31:47.250Z'
